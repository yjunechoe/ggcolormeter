[{"path":"https://yjunechoe.github.io/ggcolormeter/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggcolormeter authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"June Choe. Author, maintainer.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choe J (2023). ggcolormeter: Colormeter Guide Extension. https://github.com/yjunechoe/ggcolormeter, https://github.com/yjunechoe/ggcolormeter/issues, https://yjunechoe.github.io/ggcolormeter/.","code":"@Manual{,   title = {ggcolormeter: Colormeter Guide Extension},   author = {June Choe},   year = {2023},   note = {https://github.com/yjunechoe/ggcolormeter, https://github.com/yjunechoe/ggcolormeter/issues, https://yjunechoe.github.io/ggcolormeter/}, }"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"ggcolormeter","dir":"","previous_headings":"","what":"Colormeter Guide Extension","title":"Colormeter Guide Extension","text":"ggcolormeter adds guide_colormeter(), ggplot2 color/fill legend guide extension style dashboard meter.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"simple-usage","dir":"","previous_headings":"","what":"Simple usage","title":"Colormeter Guide Extension","text":"","code":"library(ggplot2) library(ggcolormeter)  theme_set(theme_classic())  p <- ggplot(mtcars, aes(drat, hp)) +   geom_point(aes(color = mpg))  p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter()   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"legend-boundary","dir":"","previous_headings":"","what":"Legend boundary","title":"Colormeter Guide Extension","text":"colormeter legend bit pecular size doesn’t expand keys: colormeter fixed size shape, elements packed inside . can primarily control size legend legend_size aspect.ratio  Note usual legend background still present different dashboard circle:  time ’d want remove legend background, dashboard serves purpose:","code":"p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       legend_size = unit(3, \"cm\"),       aspect.ratio = .8     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       legend_size = unit(3, \"cm\"),       aspect.ratio = .8     )   ) +   theme(legend.background = element_rect(color = \"red\", fill = \"pink\")) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(     )   ) +   theme(     legend.position = c(.85, .75),     legend.background = element_blank()   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"arc","dir":"","previous_headings":"","what":"Arc","title":"Colormeter Guide Extension","text":"Non-positional aesthetic arguments color arc:  default, label dashboard radii derived arc_radius:  can use arc_range set start end angles color meter, may yield different shapes:  defaults aren’t great change dashboard shape. manual adjustments may desirable:","code":"formals(guide_colormeter)[grepl(\"arc\", names(formals(guide_colormeter)))] #> $arc_range #> c(-4/7 * pi, 4/7 * pi) #>  #> $arc_radius #> [1] 1 #>  #> $arc_width #> arc_radius/4 #>  #> $arc_gap #> arc_radius/5 #>  #> $arc_rounding #> [1] 0 p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       arc_width = 1/6, # thinner arcs       arc_gap = 1/3, # bigger gaps       arc_rounding = 0.03 # rounded corners     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       arc_radius = 1.2     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(5), # half the arcs     guide = guide_colormeter(       arc_range = c(-pi/2, 0) # quarter circle     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(5),     guide = guide_colormeter(       arc_range = c(-pi/2, 0),       title_position = c(-.2, .2), # moves title left and up from center       legend_padding = grid::unit(0.7, \"lines\") # pads relative to legend label     )   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"label","dir":"","previous_headings":"","what":"Label","title":"Colormeter Guide Extension","text":"default, dashboard radius derived label_radius:  Like ggplot2::guide_colorsteps(), argument show.limits controls labeling limits scale:","code":"formals(guide_colormeter)[grepl(\"label\", names(formals(guide_colormeter)))] #> $label.theme #> NULL #>  #> $label_radius #> arc_radius * 1.25 p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       label_radius = 1.5     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       label_radius = 1.3,       show.limits = TRUE     )   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"dashboard","dir":"","previous_headings":"","what":"Dashboard","title":"Colormeter Guide Extension","text":"dashboard_radius controls radius just dashboard circle  default, dashboard clipped legend boundary, can turned :  Non-positional aesthetic arguments dashboard:","code":"formals(guide_colormeter)[grepl(\"dashboard\", names(formals(guide_colormeter)))] #> $dashboard_radius #> label_radius * 1.2 #>  #> $dashboard_color #> [1] \"black\" #>  #> $dashboard_fill #> [1] NA #>  #> $dashboard_linewidth #> [1] 0.5 #>  #> $dashboard_linetype #> [1] 1 #>  #> $clip_dashboard #> [1] TRUE #>  #> $close_dashboard #> clip_dashboard p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       dashboard_radius = 1.2,     )   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       title = \"mpg<br><br>         <span style='color:darkgrey;font-size:12px'>miles per gallon<\/span>\",       clip_dashboard = FALSE     )   ) +   theme(legend.title = ggtext::element_markdown(vjust = -.6)) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       dashboard_fill = \"skyblue\",       dashboard_color = \"steelblue\",       dashboard_linetype = 5,       dashboard_linewidth = 4     )   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"frame","dir":"","previous_headings":"","what":"Frame","title":"Colormeter Guide Extension","text":"Frames simply decorate color arcs/bars:","code":"formals(guide_colormeter)[grepl(\"frame\", names(formals(guide_colormeter)))] #> $frame_color #> [1] NA #>  #> $frame_linewidth #> [1] 0.5 #>  #> $frame_linetype #> [1] 1 p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(       frame_color = \"black\",       frame_linewidth = .3     )   )"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"misc","dir":"","previous_headings":"","what":"Misc","title":"Colormeter Guide Extension","text":"Set debug = TRUE inspect internal legend coordinate system (deciding dashboard_radius, arc_width, title_position, etc.):  Puttings labels inside arc:","code":"p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(debug = TRUE)   ) p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(5),     guide = guide_colormeter(       arc_width = 0.1,       label_radius = .7,       aspect.ratio = 1.1,       dashboard_color = NA     )   ) +   theme(legend.position = c(.85, .75))"},{"path":"https://yjunechoe.github.io/ggcolormeter/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Colormeter Guide Extension","text":"Thomas Lin Pedersen {ggforce}, whose several unexported functions used package.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/guide_colormeter.html","id":null,"dir":"Reference","previous_headings":"","what":"A color legend in the style of a dashboard meter — guide_colormeter","title":"A color legend in the style of a dashboard meter — guide_colormeter","text":"color legend style dashboard meter","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/guide_colormeter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A color legend in the style of a dashboard meter — guide_colormeter","text":"","code":"guide_colormeter(   title = ggplot2::waiver(),   title.theme = NULL,   label.theme = NULL,   legend_size = unit(5, \"lines\"),   legend_padding = unit(c(1.2, 1, 0.3, 1), \"lines\"),   title_position = c(0, 0),   arc_range = c(-4/7 * pi, 4/7 * pi),   arc_radius = 1,   arc_width = arc_radius/4,   arc_gap = arc_radius/5,   arc_rounding = 0,   label_radius = arc_radius * 1.25,   dashboard_radius = label_radius * 1.2,   dashboard_color = \"black\",   dashboard_fill = NA,   dashboard_linewidth = 0.5,   dashboard_linetype = 1,   clip_dashboard = TRUE,   close_dashboard = clip_dashboard,   frame_color = NA,   frame_linewidth = 0.5,   frame_linetype = 1,   aspect.ratio = 1,   show.limits = NULL,   debug = FALSE,   reverse = FALSE,   available_aes = c(\"colour\", \"color\", \"fill\"),   ... )"},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/guide_colormeter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A color legend in the style of a dashboard meter — guide_colormeter","text":"title character string expression indicating title guide. NULL, title shown. default (waiver()), name scale object name specified labs() used title. title.theme theme object rendering title text. Usually object element_text() expected. default, theme specified legend.title theme() theme. label.theme theme object rendering label text. Usually object element_text() expected. default, theme specified legend.text theme(). legend_size Size legend box. legend_padding Spacing color meter legend boundary. title_position <legend-coords> 2-length vector x/y-position legend title. arc_range <legend-coords> 2-length vector start end angles color meter. arc_radius <legend-coords> Radius color meter. arc_width <legend-coords> Width arcs color meter. arc_gap <legend-coords> Gap arcs color meter. arc_rounding <legend-coords> Rounding arcs color meter. label_radius <legend-coords> Radius labels. dashboard_radius <legend-coords> Radius dashboard background. dashboard_color Dashboard background color. dashboard_fill Dashboard background fill. dashboard_linewidth Dashboard background line width. dashboard_linetype Dashboard background line type. clip_dashboard Whether dashboard circle clip legend boundary. close_dashboard Whether dashboard closed meets legend boundary. frame_color Color frame drawn around arcs. frame_linewidth Width frame drawn around arcs. frame_linetype Line type frame drawn around arcs. aspect.ratio Aspect ratio legend. show.limits Logical. limits scale shown labels ticks. Default NULL meaning take value scale. argument ignored labels given vector values. one limits also given breaks shown irrespective value show.limits. debug TRUE, axes origin <legend-coords> drawn legend debugging. reverse logical. TRUE colourbar reversed. default, highest value top lowest value bottom available_aes vector character strings listing aesthetics colourbar can drawn. ... Ignored.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/guide_colormeter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A color legend in the style of a dashboard meter — guide_colormeter","text":"guide object class 'colormeter'","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/guide_colormeter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A color legend in the style of a dashboard meter — guide_colormeter","text":"","code":"library(ggplot2) # A standard plot p <- ggplot(mtcars, aes(drat, hp)) +   geom_point(aes(color = mpg)) # Colormeter guide for color scale p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter()   ) #> Error in grid.Call.graphics(C_setviewport, vp, TRUE): Mask is not logical value ('none' or 'inherit')"},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/legend-coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Colormeter legend coordinate system — legend-coords","title":"Colormeter legend coordinate system — legend-coords","text":"Due peculiar nature colormeter legend (e.g., dynamic size positioning color bars/arcs depending number breaks), many parts legend drawn mini isolated coordinate space. can inspect coordinate space debug = TRUE. coordinate space defaults x-y range legend \"data\", considers polar-transformed positioning color arcs/bars, labels, dashboard circle.","code":""},{"path":"https://yjunechoe.github.io/ggcolormeter/reference/legend-coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colormeter legend coordinate system — legend-coords","text":"","code":"library(ggplot2) # A standard plot p <- ggplot(mtcars, aes(drat, hp)) +   geom_point(aes(color = mpg)) # Colormeter guide for color scale p +   scale_color_viridis_c(     option = \"inferno\",     breaks = scales::breaks_pretty(10),     guide = guide_colormeter(debug = TRUE)   ) #> Error in grid.Call.graphics(C_setviewport, vp, TRUE): Mask is not logical value ('none' or 'inherit')"}]

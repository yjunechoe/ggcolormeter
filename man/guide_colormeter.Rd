% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guide_colormeter.R
\name{guide_colormeter}
\alias{guide_colormeter}
\title{A color legend in the style of a dashboard meter}
\usage{
guide_colormeter(
  title = ggplot2::waiver(),
  title.theme = NULL,
  label.theme = NULL,
  legend_size = unit(5, "lines"),
  legend_padding = unit(c(1.2, 1, 0.3, 1), "lines"),
  title_position = c(0, 0),
  arc_range = c(-4/7 * pi, 4/7 * pi),
  arc_radius = 1,
  arc_width = arc_radius/4,
  arc_gap = arc_radius/5,
  arc_rounding = 0,
  label_radius = arc_radius * 1.25,
  dashboard_radius = label_radius * 1.2,
  dashboard_color = "black",
  dashboard_fill = NA,
  dashboard_linewidth = 0.5,
  dashboard_linetype = 1,
  clip_dashboard = TRUE,
  close_dashboard = clip_dashboard,
  frame_color = NA,
  frame_linewidth = 0.5,
  frame_linetype = 1,
  aspect.ratio = 1,
  show.limits = NULL,
  debug = FALSE,
  reverse = FALSE,
  available_aes = c("colour", "color", "fill"),
  ...
)
}
\arguments{
\item{title}{A character string or expression indicating a title of guide.
If \code{NULL}, the title is not shown. By default
(\code{\link[ggplot2:waiver]{waiver()}}), the name of the scale object or the name
specified in \code{\link[ggplot2:labs]{labs()}} is used for the title.}

\item{title.theme}{A theme object for rendering the title text. Usually the
object of \code{\link[ggplot2:element_text]{element_text()}} is expected. By default, the theme is
specified by \code{legend.title} in \code{\link[ggplot2:theme]{theme()}} or theme.}

\item{label.theme}{A theme object for rendering the label text. Usually the
object of \code{\link[ggplot2:element_text]{element_text()}} is expected. By default, the theme is
specified by \code{legend.text} in \code{\link[ggplot2:theme]{theme()}}.}

\item{legend_size}{Size of the legend box.}

\item{legend_padding}{Spacing between the color meter and the legend boundary.}

\item{title_position}{<\code{\link{legend-coords}}> 2-length vector for the x/y-position of the legend title.}

\item{arc_range}{<\code{\link{legend-coords}}> 2-length vector for the start and end angles of the color meter.}

\item{arc_radius}{<\code{\link{legend-coords}}> Radius of the color meter.}

\item{arc_width}{<\code{\link{legend-coords}}> Width of the arcs in the color meter.}

\item{arc_gap}{<\code{\link{legend-coords}}> Gap between arcs in the color meter.}

\item{arc_rounding}{<\code{\link{legend-coords}}> Rounding of arcs in the color meter.}

\item{label_radius}{<\code{\link{legend-coords}}> Radius of the labels.}

\item{dashboard_radius}{<\code{\link{legend-coords}}> Radius of the dashboard background.}

\item{dashboard_color}{Dashboard background color.}

\item{dashboard_fill}{Dashboard background fill.}

\item{dashboard_linewidth}{Dashboard background line width.}

\item{dashboard_linetype}{Dashboard background line type.}

\item{clip_dashboard}{Whether the dashboard circle should clip to the legend boundary.}

\item{close_dashboard}{Whether the dashboard should be closed where it meets the legend boundary.}

\item{frame_color}{Color of the frame drawn around the arcs.}

\item{frame_linewidth}{Width of the frame drawn around the arcs.}

\item{frame_linetype}{Line type of the frame drawn around the arcs.}

\item{aspect.ratio}{Aspect ratio for the legend.}

\item{show.limits}{Logical. Should the limits of the scale be shown with
labels and ticks. Default is \code{NULL} meaning it will take the value from the
scale. This argument is ignored if \code{labels} is given as a vector of
values. If one or both of the limits is also given in \code{breaks} it will be
shown irrespective of the value of \code{show.limits}.}

\item{debug}{If \code{TRUE}, axes and origin for <\code{\link{legend-coords}}> are drawn over the legend for debugging.}

\item{reverse}{logical. If \code{TRUE} the colourbar is reversed. By default,
the highest value is on the top and the lowest value is on the bottom}

\item{available_aes}{A vector of character strings listing the aesthetics
for which a colourbar can be drawn.}

\item{...}{Ignored.}
}
\value{
A guide object of class 'colormeter'
}
\description{
A color legend in the style of a dashboard meter
}
\examples{
library(ggplot2)
# A standard plot
p <- ggplot(mtcars, aes(drat, hp)) +
  geom_point(aes(color = mpg))
# Colormeter guide for color scale
p +
  scale_color_viridis_c(
    option = "inferno",
    breaks = scales::breaks_pretty(10),
    guide = guide_colormeter()
  )

}
